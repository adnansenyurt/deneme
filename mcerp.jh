

enum OpportunityStatus {
	INITIAL, PROPOSAL, LOST, WON
}

enum CustomerOrderStatus {
    RECEIVED, INVOICED, PAID
}

enum CashFlowDirection {
	IN, OUT
}

enum CashFlowType {
	INVOICE, ALLOWANCE, SALARY, PO, TAX, CORRECTION
}

enum CashFlowStatus {
	DUE, PAID, LATE, CANCELLED
}

enum Currency {
	TL, USD, EURO
}

enum PurchaseOrderStatus {
	ACTIVE, DELIVERED, CANCELLED
}


entity Customer {
	name String required
    address String
    phone String
    accountNo String //IBAN
}

entity Supplier {
	name String required
    address String //free format address entry
    domain String required
    web String //URL
    phone String
    accountNo String //IBAN
}

entity ContactPerson {
	name String required
    role String
    eMail String
    mobile String
}

entity Opportunity {
	name String required
    dateOpened Instant required
    amount Long
    currentStatus OpportunityStatus
}

entity CustomerOrder {
	name String required
    dateOpened Instant required
    datePaymentDue Instant
    amount Long
    currentStatus CustomerOrderStatus
}

entity PurchaseOrder {
	name String required
    dateOpened Instant required
    amount Long required
    costCenter String
    paymentConditions String
    currentStatus PurchaseOrderStatus required
}

entity CashFlow {
	datePayment Instant required
    //relatedPO
    //relatedCostCenter
    //relatedCustomer
    direction CashFlowDirection required
    type CashFlowType required
    amount Long required
    description String
    currentStatus CashFlowStatus required
}

entity Invoice {
	name String required
	dateIssued Instant required
    amountTotal Long
    paymentDue Integer //duration
}

entity CustomerProposal {
	name String required
    dateSubmitted Instant required
    duration Integer //days valid
    amount Long
}

entity Product {
	name String required
	model String required
    image String //object URL
    brochure String //pdf URL
    specsURL String //web URL
}

entity BillOfMaterials {
    items Integer //number of items used per product model
}

entity SupplierContract {
	//relatedSupplier
    dateSigned Instant required
    //relatedSupplyPartContract
    //relatedPriceRange
}

entity SupplyPart {
	name String required
    supplierPartCode String
    description String
}

entity SupplyPartContract {
	//relatedSupplyPart
    //relatedPriceRange
    //relatedSupplierContract
}

entity PriceRange {
	rangeLow Integer required //inclusive
    rangeHigh Integer required //inclusive
    price Long required
    currency Currency required //default: USD
}

entity ProductStock {
    skuCode String required
    amount Long //number of items
}

entity SupplyStock {
	name String required
    amount Long //number of items
}

relationship OneToMany {
    Opportunity{customer} to Customer{opportunity(name)},
    Customer{order} to CustomerOrder{customer(name)},
    Customer{contactPerson(name)} to ContactPerson{customer},
    Supplier{contactPerson(name)} to ContactPerson{supplier},
    Product{opportunity(name)} to Opportunity{product},
    Supplier{purchaseOrder(name)} to PurchaseOrder{supplier},
    SupplierContract{purchaseOrder(dateSigned)} to PurchaseOrder{supplierContract},
    SupplierContract{supplyPartContract(dateSigned)} to SupplyPartContract{supplierContract},
    PurchaseOrder{cashFlow(name)} to CashFlow{purchaseOrder},
    CustomerOrder{cashFlow(name)} to CashFlow{customerOrder},
    Customer{customerProposal(name)} to CustomerProposal{customer},
    Product{productStock(name)} to ProductStock{product},
    SupplyPart{supplyStock(name)} to SupplyStock{supplyPart},
    BillOfMaterials{supplyPart} to SupplyPart{bom},
    Customer{invoice(name)} to Invoice{customer}
}

relationship OneToOne {
    SupplyPart{contract} to SupplyPartContract,
    PriceRange{contract} to SupplyPartContract,
    Invoice{customerOrder(name)} to CustomerOrder{invoice},
    CustomerOrder{proposal} to CustomerProposal{customerOrder},
    CustomerProposal{opportunity} to Opportunity{proposal},
    BillOfMaterials{product} to Product{bom}
}

//relationship ManyToMany {
//	Job{task(title)} to Task{job}
//}

//relationship ManyToOne {
//	Employee{manager} to Employee
//}

// Set pagination options
//paginate JobHistory, Employee with infinite-scroll
//paginate Job with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl //except Employee, Job
// Set an angular suffix
angularSuffix * with mc //mobile-chip

